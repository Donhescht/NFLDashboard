@model IEnumerable<NFLDashboard.Controllers.TeamYearStatsController.AggregateTeamStats>

@{
    ViewBag.Title = "Index";
}
@using Newtonsoft.Json

<!DOCTYPE html>
<html>
<head>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">


        google.charts.load('current', {'packages':['corechart']});
        google.charts.setOnLoadCallback(drawSeriesChart);

        // Render the bubble chart on the dashboard.  This bubble chart
        // shows the team effectiveness by comparing cost, cost per win 
        // and total wins for the time period.
        function drawSeriesChart() {

            var aggegateStats = @Html.Raw(JsonConvert.SerializeObject(this.Model));
            var nflStats = [];
            var labels = [];
            labels[0] = "Team";
            labels[1] = "Cost In Millions";
            labels[2] = "Wins";
            labels[3] = "Cost Per Win in Thousands";
            nflStats.push(labels);

            for(var i=0; i < aggegateStats.length; i++)
            {
                var aTeamStats = [];
                aTeamStats.push(aggegateStats[i].Team);
                aTeamStats.push(aggegateStats[i].Cost / 1000000);
                aTeamStats.push(aggegateStats[i].Wins);
                var cost =  ~~((aggegateStats[i].Cost / aggegateStats[i].Wins) /  1000);
                aTeamStats.push(cost);
                
                nflStats.push(aTeamStats)
            }
            var data = google.visualization.arrayToDataTable(nflStats);

            var options = {
                title: 'NFL Team Effectiveness (Cost Per Win (Thousands) in Color)',
                hAxis: {title: 'Total Cost in Millions'},
                vAxis: {title: 'Total Wins'},
                bubble: {textStyle: {fontSize: 11}},
                colorAxis: {colors: [ 'green', 'red']}
            };
           
            // This locally scoped method is called when a user selects 
            // a bubble. It causes the detailed graphs on the chosen team.
            function selectHandler() {
                var selectedItem = chart.getSelection()[0];
                if (selectedItem) {
                    var value = data.getValue(selectedItem.row, 0);
                    updateDetailCharts(value);
                }
            }

            var chart = new google.visualization.BubbleChart(document.getElementById('NFLBubbleArea'));
            google.visualization.events.addListener(chart, 'select', selectHandler);
            chart.draw(data, options);

            // Just pick one to be selected.

            chart.setSelection([{row:22, column:null}]);
            var value = data.getValue(22, 0);

            updateDetailCharts(value);
        }

        // This function creates charts on the canvas
        function updateDetailCharts(selectedTeam) {

            /* DO NOT REMOVE : GLOBAL FUNCTIONS!
             * pageSetUp() is needed whenever you load a page.
             * It initializes and checks for all basic elements of the page
             * and makes rendering easier.
             *
             */
            pageSetUp();
            debugger;

            var aggegateStats = @Html.Raw(JsonConvert.SerializeObject(this.Model));
            var chartWinData = [];
            var chartCostData = [];
            var chartLabel = [];
            var Team = "";

            for(var i=0; i < aggegateStats.length; i++)
            {
                if(aggegateStats[i].Team ==selectedTeam)
                {
                    Team = aggegateStats[i].Team;
                    chartWinData = aggegateStats[i].WinsEachYear;
                    chartCostData = aggegateStats[i].CostEachYear;
                    chartLabel = aggegateStats[i].Years;
                }
            }

            var tempCost;
            var tempWin;
            var tempYear;
            // Now sort by year
            for(var i=0; i < chartLabel.length; i++)
            {
                for(var k = 0; k < chartLabel.length-1; k++ )
                {
                    if(chartLabel[k] > chartLabel[k+1])
                    {
                        tempWin = chartWinData[k];
                        tempCost = chartCostData[k];
                        tempYear = chartLabel[k];
                        chartWinData[k]= chartWinData[k+1];
                        chartCostData[k] = chartCostData[k+1];
                        chartLabel[k]= chartLabel[k+1];
                        chartWinData[k+1] = tempWin;
                        chartCostData[k+1] = tempCost;
                        chartLabel[k+1]= tempYear;
                    }
                }
            }

            // See ChartJS documentation for how to set up charts.
            var optionsWins = {
                scaleBeginAtZero: true,
                scaleShowGridLines: true,
                scaleGridLineColor: "rgba(0,0,0,.05)",
                scaleGridLineWidth: 1,
                backgroundColor: "rgba(1,0,0,1)",
                responsive: true,
                scales: {
                    yAxes: [{
                        ticks: {
                            max: 18,
                            min: 0,
                            stepSize: 1
                        }
                    }]
                },
                //legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"
            }

            var dataWins = {
                labels: chartLabel,
                datasets: [
                   {
                       lineTension: 0,
                       backgroundColor: "rgba(0,0,255,0.1)",
                       borderColor: "rgba(0,0,255,0.1)",
                       data: chartWinData,
                       label: "Wins for: " + Team.toString(),
                   }]
            };

            // render chart
            var ctx = document.getElementById("teamWinsPerYear").getContext("2d");
            var myNewChart = new Chart(ctx, {type: 'line', data: dataWins, options: optionsWins});


            var optionsCost = {
                scaleBeginAtZero: true,
                lineTension: 0,
                steppedLine: true,
                scaleShowGridLines: true,
                scaleGridLineColor: "rgba(0,0,0,.05)",
                scaleGridLineWidth: 1,
                backgroundColor: "rgba(1,0,0,1)",
                responsive: true,
                scales: {
                    yAxes: [{
                        ticks: {
                            max: 200000000,
                            min: 80000000,
                            stepSize: 20000000
                        }
                    }]
                },
                legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"
            }

            var dataCost = {
                labels: chartLabel,
                datasets: [
                   {
                       lineTension: 0,
                       backgroundColor: "rgba(255,0,0,0.1)",
                       borderColor: "rgba(255,0,0,0.1)",
                       data: chartCostData,
                       label: "Costs for: " + Team.toString(),
                   }]
            };

            // render chart
            var ctx = document.getElementById("teamCostsPerYear").getContext("2d");
            var myNewChart = new Chart(ctx, {type: 'line', data: dataCost, options: optionsCost});
        }

    </script>
</head>

<body>
    <section id="widget-grid" class="">
        <div class="row">
            <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8">
                <h1 class="page-title txt-color-blueDark">
                    <i class="fa-fw fa fa-home"></i>
                    NFL Team
                    <span>
                        >Mertics
                    </span>
                </h1>
            </div>
        </div>

       <div class="row">
                <article class="col-xs-12 col-sm-8 col-md-8 col-lg-8">
                    <!-- Widget ID (each widget will need unique ID)-->
                    <div class="jarviswidget" id="wid-id-4" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-editbutton="false" data-widget-sortable="false">
                        <header>
                            <h2>Team Winning and Cost Effectiveness </h2>

                            <div class="widget-toolbar">

                                <div class="btn-group">
                                    <button class="btn dropdown-toggle btn-xs btn-warning" data-toggle="dropdown">
                                        Options <i class="fa fa-caret-down"></i>
                                    </button>
                                    <ul class="dropdown-menu pull-right">
                                        <li>
                                            <a href="javascript:void(0);">2010-2015 (Default)</a>
                                        </li>
                                        <li>
                                            <a href="javascript:void(0);">2015 Only</a>
                                        </li>
                                        <li>
                                            <a href="javascript:void(0);">Current Year</a>
                                        </li>
                                    </ul>
                                </div>
                            </div>

                        </header>
                        <div>
                            <!-- widget edit box -->
                            <div class="jarviswidget-editbox">
                                <!-- This area used as dropdown edit box -->
                                <input class="form-control" type="text">
                            </div>
                            <!-- end widget edit box -->
                            <!-- widget content -->
                            <div class="widget-body" id="NFLBubbleArea" style="width: 1200px; height: 750px;"></div>
                        </div>
                    </div>
                </article>
                <article class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
                    <div class="jarviswidget" id="wid-id-2" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-editbutton="false" data-widget-sortable="false">
                        <header>
                            <h2>Wins Per Year</h2>
                        </header>
                        <div>
                            <div class="widget-body">
                                <canvas id="teamWinsPerYear" height="150"></canvas>
                            </div>
                        </div>
                    </div>

                    <div class="jarviswidget" id="wid-id-3" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-editbutton="false" data-widget-sortable="false">
                        <header>
                            <h2>AAV Cost Per Year</h2>
                        </header>
                        <div>
                            <div class="widget-body">
                                <canvas id="teamCostsPerYear" height="150"></canvas>
                            </div>
                        </div>
                    </div>
  
                </article>
            </div>     
   </section>
</body>     
</html>
