getwd()
read.table("Salary2.txt",header = FALSE,sep = "\t")
Salary = read.table("Salary2.txt",header = FALSE,sep = "\t")
str(Salary)
Salary$V4
?gsub
gsub("\,","",Salary$V4)
gsub(",","",Salary$V4)
gsub("$|,","",Salary$V4)
gsub("^$|,","",Salary$V4)
gsub("^$","",Salary$V4)
gsub("\$","",Salary$V4)
gsub("\$","",Salary$V4)
gsub("\\$","",Salary$V4)
gsub("\\$","",Salary$V4)
gsub("\,","",gsub("\\$","",Salary$V4))
gsub(",","",gsub("\\$","",Salary$V4))
gsub(",","",gsub("\\$","",Salary[,4]))
gsub(",","",gsub("\\$","",Salary[,4-7]))
install.packages("dplyr")
install.packages("RPostgreSQL")
install.packages("DBI")
salary[,4-7] <- gsub(",","",gsub("\\$","",Salary[,4-7]))
Salary[,4-7] <- gsub(",","",gsub("\\$","",Salary[,4-7]))
str(Salary)
Salary[,4-7] <- is.number(gsub(",","",gsub("\\$","",Salary[,4-7])))
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
str(salary)
salary[,4-7] <- as.numberic(gsub(",","",gsub("\\$","",salary[,4-7])))
salary[,4-7] <- as.integer(gsub(",","",gsub("\\$","",salary[,4-7])))
salary$V4
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
as.integer(gsub(",","",gsub("\\$","",salary[,4-7])))
as.numeric(gsub(",","",gsub("\\$","",salary[,4-7])))
gsub(",","",gsub("\\$","",salary[,4-7]))
gsub(",","",gsub("\\$","",salary[,$V4]))
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
gsub(",","",gsub("\\$","",salary[,$V4]))
gsub(",","",gsub("\\$","",salary$V4))
typeof(gsub(",","",gsub("\\$","",salary$V4))_
typeof(gsub(",","",gsub("\\$","",salary$V4)))
as.integer(gsub(",","",gsub("\\$","",salary$V4)))
typeof(as.integer(gsub(",","",gsub("\\$","",salary$V4))))
str(salary)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
str(salary)
install.packages("lattice")
install.packages("ggplot2")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
library("lattice")
library("ggplot2")
str(salary)
with(salary, qplot(V1,V6))
summary(salary)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
summary(salary)
with(salary, qplot(V1,V6))
qplot(salary$V1,salary$V6,geom_smooth)
qplot(salary$V1,salary$V6,geom_smooth())
qplot(salary$V1,salary$V6) + geom_smooth()
str(salary)
qplot(salary$V1,salary$V6,facets=salary$V3) + geom_smooth()
?ggplot2
?ggplot
summary(salary)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
str(salary)
colnames(salary) <- c("year","team","offense_cost", "defense_cost","total_cost")
str(salary)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
salary$V2 <- NULL
str(salary)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
salary
salary <- read.table("Salary2.txt", header = FALSE, sep = "\t")
salary <- salary[,-c(V2)]
salary
str(salary)
salary <- salary[,-c("V2")]
salary <- salary[,!(names(salary) %in% c("V2"))]
str(salary)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
salary <- read.table("Salary2.txt", header = FALSE, sep = "\t") salary <- salary[,!(names(salary) %in% c("V2"))]
str(salary)
colnames(salary) <- c("year","team","offense_cost", "defense_cost","total_cost")
str(salary)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
str(salary)
library(RPostgreSQL)
library()
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
team <- dbReadTable(con, c("public", "team"))
str(team)
teamyearstats <- dbReadTable(con, c("public", "teamyearstats"))
str(teamyearstats)
merge(teamyearstats,team, by.x = "team_id", by.y = "team_id")
m <-merge(teamyearstats,team, by.x = "team_id", by.y = "team_id")
str(m)
str(salary)
m <-merge(teamyearstats,team, by.x = "team_id", by.y = "team_id")
paste(m$city,m$name,sep = " ")
salary$names
salary$team
mutate(m, fullname = paste(m$city, m$name, sep = " "))
merge(m,teamyearstats, by.x = "fullname", by.y = "name")
str(teamyearstats)
str(m)
str(salary)
str(m)
m[, !(names(salary) %in% c("offense_cost","defense_cost","total_cost"))]
str(m[, !(names(salary) %in% c("offense_cost","defense_cost","total_cost"))])
str(m[, !(names(m) %in% c("offense_cost","defense_cost","total_cost"))])
m <- m[, !(names(m) %in% c("offense_cost","defense_cost","total_cost"))]
str(m)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
str(team_merged)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
str(teamyearstats)
merge(teamyearstats,salary, by.x = "fullname", by.y = "name")
str(salary)
merge(teamyearstats,salary, by.x = "fullname", by.y = "team")
str(teamyearstats)
summary(teamyearstats)
str(teamyearstats)
str(salary)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
str(salary)
str(teamyearstats)
merge(teamyearstats,salary, all=TRUE)
merge(teamyearstats,salary, all=FALSE)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
teamyearstats
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
library(dplyr) library(RPostgreSQL) library(DBI)
# Get salary from text file and improve table for update of db salary <- read.table("Salary2.txt", header = FALSE, sep = "\t") salary <- salary[,!(names(salary) %in% c("V2"))] colnames(salary) <- c("season_year","fullname","offense_cost", "defense_cost","total_cost") salary$offense_cost <- as.integer(gsub(",", "", gsub("\\$", "", salary$offense_cost))) salary$defense_cost <- as.integer(gsub(",", "", gsub("\\$", "", salary$defense_cost))) salary$total_cost <- as.integer(gsub(",", "", gsub("\\$", "", salary$total_cost)))
drv <- dbDriver("PostgreSQL") con <- dbConnect(drv, dbname="nfldb",port="5432", host="localhost", user="postgres",password="Canon7D")
team <- dbReadTable(con, c("public", "team")) teamyearstats <- dbReadTable(con, c("public", "teamyearstats"))
teamyearstats <- merge(teamyearstats, team, by.x = "team_id", by.y = "team_id")
x <- with(teamyearstats, paste(city, name, sep = " ") x <- with(teamyearstats, paste(city, name, sep = " "))
x <- paste(teamyearstats$city, teamyearstats$name, sep = " "))
x <- paste(teamyearstats$city, teamyearstats$name, sep = " ")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
str(teamyearstats)
xyplot(teamyearstats$season_year,teamyearstats)
library(lattice)
library(ggplot2)
xyplot(teamyearstats$season_year,teamyearstats)
boxplot(teamyearstats$cost)
boxplot(teamyearstats$cost ~ teamyearstats$season_year)
boxplot(teamyearstats$total_cost ~ teamyearstats$season_year)
plot(teamyearstats$total_cost ~ teamyearstats$season_year)
teamyearstats
ggplot(data=teamyearstats, aes(x=total_cost, y=wins)) + geom_point() + labs(title="Wins Versus Cost", x="Cost", y="Wins")
ggplot(data=teamyearstats, aes(x=wins, y=total_cost)) + geom_point() + labs(title="Wins Versus Cost", x="wins", y="Cost")
ggplot(data=teamyearstats, aes(x=wins, y=total_cost)) + geom_point() + labs(title="Wins Versus Cost", x="wins", y="Cost")
library(dplyr)
teamyearstats
data
data()
teamyearstats
install.packages("foreach")
install.packages("doMC")
foreach
install.packages("doSNOW")
registerDoSNOW() foreach(i = 1:length(teamyearstats$offense_cost), .inorder = FALSE, .packages = "RPostgreSQL") %dopar% {     update(i) }
library(dplyr) library(RPostgreSQL) library(DBI) library(foreach) library(doSNOW)
registerDoSNOW() foreach(i = 1:length(teamyearstats$offense_cost), .inorder = FALSE, .packages = "RPostgreSQL") %dopar% {     update(i) }
length(teamyearstats$offense_cost)
teamyearstats
registerDoSNOW() foreach(i = 1:length(teamyearstats$offense_cost), .inorder = FALSE, .packages = "RPostgreSQL") %dopar% {     update(i) }
source("UpdateTeamStat.R")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WinningVersusSpending.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WinningVersusSpending.R", encoding = "Windows-1252")
teamyearstats
str(teamyearstats)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WinningVersusSpending.R", encoding = "Windows-1252")
filter(ts,total_costs > 0)
?filter
dplyr.filter()
library(dplyr)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WinningVersusSpending.R", encoding = "Windows-1252")
filter(tys,total_cost>0)
tys<-filter(tys,total_cost>0)
tys[,tys$team_id=="CLE"]
tys[,team_id=="CLE"]
tys[team_id=="CLE",]
tys[tys$team_id=="CLE",]
cle=tys[tys$team_id=="CLE",]
xyplot(cle$total_cost ~ cle$season_year)
library(lattice)
xyplot(cle$total_cost ~ cle$season_year)
mean(cle$total_cost)
mean(tys$total_cost)
library(ggplot2)
aggregate(tys$total_cost,tys$season_year)
aggregate(tys$total_cost,tys$season_year,mean)
aggregate(tys$total_cost,list(Year = tys$season_year),mean)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WinningVersusSpending.R", encoding = "Windows-1252")
ggpolt2(data=tys, aes(x=wins,y=total_cost)) + geom_point() + labs(title="Winning and Total Cost (AAV)", x="Wins", y="Total Cost")
ggpolt(data=tys, aes(x=wins,y=total_cost)) + geom_point() + labs(title="Winning and Total Cost (AAV)", x="Wins", y="Total Cost")
ggplot(data=tys, aes(x=wins,y=total_cost)) + geom_point() + labs(title="Winning and Total Cost (AAV)", x="Wins", y="Total Cost")
ggplot(data = tys, aes(x = wins, y = total_cost)) +  geom_point() + geom_smooth(method="lm", color="red", linetype=2) + labs(title = "Winning and Total Cost (AAV)", x = "Wins", y = "Total Cost")
aggregate(tys$total_cost,list(Year = tys$season_year),mean)
cle=tys[tys$team_id=="CLE",]ggplot(data = tys, aes(x = wins, y = total_cost)) +  geom_density() + geom_smooth(method="lm", color="red", linetype=2) + labs(title = "Winning and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot(data = tys, aes(x = wins, y = total_cost)) +  geom_density() + geom_smooth(method="lm", color="red", linetype=2) + labs(title = "Winning and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot(data = tys, aes(x = wins)) +  geom_density() + geom_smooth(method="lm", color="red", linetype=2) + labs(title = "Winning and Total Cost (AAV)", x = "Wins", y = "Total Cost")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WinningVersusSpending.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WinningVersusSpending.R", encoding = "Windows-1252")
ggplot(data = tys, aes(x = wins, y = total_cost)) +  geom_point() + geom_smooth(method="lm", color="red", linetype=2) + labs(title = "Winning and Total Cost (AAV)", x = "Wins", y = "Total Cost")
aggregate(tys$total_cost, list(Year = tys$season_year), sum)
aggregate(tys$total_cost, sum)
aggregate(tys$total_cost, list(Year = tys$season_year), sum)
aggregate(tys$total_cost, list(team = tys$team_id), sum)
agcost <- aggregate(tys$total_cost, list(team = tys$team_id), sum)
agwin <- aggregate(tys$wins, list(team = tys$team_id), sum)
agwin
merge(agcost,agwin)
merge(agcost,agwin, by="team_id")
merge(agcost,agwin, by="team")
ag=merge(agcost,agwin, by="team")
tys
tys <- dbReadTable(con, c("public", "teamyearstats"))
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
teamyearstats
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/Salary.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WinningVersusSpending.R", encoding = "Windows-1252")
ggplot(data = tys, aes(x = wins, y = total_cost)) + geom_point() + geom_smooth(method = "lm", color = "red", linetype = 2) + labs(title = "Winning and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot(data = tys, aes(x = wins, y = total_cost)) + geom_boxplot() + geom_smooth(method = "lm", color = "red", linetype = 2) + labs(title = "Winning and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot(data = tys, aes(x = wins, y = total_cost)) + geom_histogram()  labs(title = "Winning and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot(data = tys, aes(x = total_cost, y = wins)) + geom_line() labs(title = "Winning and Total Cost (AAV)", x = "Wins", y = "Total Cost")
tysmean
ggplot(data = tysmean, aes(x = year, y = x)) + geom_point() + geom_smooth(method = "lm", color = "red", linetype = 2) + labs(title = "MeanTotal Cost (AAV)", x = "Year", y = "Mean Total Cost")
ggplot(data = tysmean, aes(x = Year, y = x)) + geom_point() + geom_smooth(method = "lm", color = "red", linetype = 2) + labs(title = "MeanTotal Cost (AAV)", x = "Year", y = "Mean Total Cost")
ggplot(data = tys, aes(x = Year, y = Wins, size=total_cost)) + geom_point() + geom_smooth(method = "lm", color = "red", linetype = 2) + labs(title = "Cost and Wins Per Year", x = "Year", y = "Wins", size = "Total Cost")
ggplot(data = tys, aes(x = season_year, y = Wins, size=total_cost)) + geom_point() + geom_smooth(method = "lm", color = "red", linetype = 2) + labs(title = "Cost and Wins Per Year", x = "Year", y = "Wins", size = "Total Cost")
ggplot(data = tys, aes(x = season_year, y = wins, size=total_cost)) + geom_point() + geom_smooth(method = "lm", color = "red", linetype = 2) + labs(title = "Cost and Wins Per Year", x = "Year", y = "Wins", size = "Total Cost")
ggplot(data = tys, aes(x = season_year, y = total_cost, size = wins )) + geom_point() + labs(title = "Cost and Wins Per Year", x = "Year", y = "Total Cost", size = "Wins")
ggplot(data = tys, aes(x = season_year, y = total_cost, color = wins)) + scale_color_manual(values=c("red", "yellow", "green")) + geom_point() + labs(title = "Cost and Wins Per Year", x = "Year", y = "Total Cost", color = "Wins")
ggplot(data = tys, aes(x = season_year, y = total_cost, color = wins)) + scale_color_brewer(palette="Set1") + geom_point() + labs(title = "Cost and Wins Per Year", x = "Year", y = "Total Cost", color = "Wins")
scale_ggplot(data = tys, aes(x = season_year, y = total_cost, color = wins)) + scale_colour_gradient(low = muted("red"), mid = "white",   high = muted("blue"), midpoint = 0, space = "Lab",   na.value = "grey50", guide = "colourbar") + geom_point() + labs(title = "Cost and Wins Per Year", x = "Year", y = "Total Cost", color = "Wins")
ggplot(data = tys, aes(x = season_year, y = total_cost, color = wins)) + scale_colour_gradient(low = muted("red"), mid = "white",   high = muted("blue"), midpoint = 0, space = "Lab",   na.value = "grey50", guide = "colourbar") + geom_point() + labs(title = "Cost and Wins Per Year", x = "Year", y = "Total Cost", color = "Wins")
ggplot(data = tys, aes(x = season_year, y = total_cost, color = wins)) + scale_colour_gradient(low = muted("red"), high = muted("green")) + geom_point() + labs(title = "Cost and Wins Per Year", x = "Year", y = "Total Cost", color = "Wins")
ggplot(data = tys, aes(x = season_year, y = total_cost, color = wins)) + scale_colour_gradient(low = "red", high = "green") + geom_point() + labs(title = "Cost and Wins Per Year", x = "Year", y = "Total Cost", color = "Wins")
ggplot(data = tys, aes(x = season_year, y = total_cost, color = wins)) + scale_colour_gradient(low = "red", high = "green") + geom_point() + geom_smooth(method = "lm", color = "red", linetype = 2) + labs(title = "Cost and Wins Per Year", x = "Year", y = "Total Cost", color = "Wins")
ggplot(data = tys, aes(x = season_year, y = total_cost, color = wins)) + scale_colour_gradient(low = "red", high = "green") + geom_point() + geom_smooth(method = "lm", color = "green", linetype = 2) + labs(title = "Cost and Wins Per Year", x = "Year", y = "Total Cost", color = "Wins")
cle
ggplot(data = cle, aes(x = (wins/(losses+wins)), y = total_cost)) + geom_point() + geom_smooth(method = "lm", color = "red", linetype = 2) + labs(title = "Cle Winning and Total Cost (AAV)", x = "Win Percentage", y = "Total Cost")
ggplot() + geom_point(data = cle, aes(x = (wins / (losses + wins)), y = total_cost)) + geom_smooth(method = "lm", color = "red", linetype = 2) + labs(title = "Cle Winning and Total Cost (AAV)", x = "Win Percentage", y = "Total Cost")
tysmean
ggplot() + geom_point(data = cle, aes(x = (wins / (losses + wins)), y = total_cost)) + geom_point(data = tys, aes(x = (wins / (losses + wins)), y = total_cost)) + labs(title = "Cle Winning and Total Cost (AAV)", x = "Win Percentage", y = "Total Cost")
ggplot() + geom_point(data = cle, aes(x = (wins / (losses + wins)), y = total_cost, colour="red")) + geom_point(data = tys, aes(x = (wins / (losses + wins)), y = total_cost)) + labs(title = "Cle Winning and Total Cost (AAV)", x = "Win Percentage", y = "Total Cost")
ggplot() + geom_point(data = cle, aes(x = (wins / (losses + wins)), y = total_cost, colour="red", size=3)) + geom_point(data = tys, aes(x = (wins / (losses + wins)), y = total_cost)) + labs(title = "Cle Winning and Total Cost (AAV)", x = "Win Percentage", y = "Total Cost")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WinningVersusSpending.R", encoding = "Windows-1252")
ggplot() + geom_point(data = cle, aes(x = (wins / (losses + wins)), y = total_cost, colour="orange", size=3)) + geom_point(data = tys, aes(x = (wins / (losses + wins)), y = total_cost)) + labs(title = "Cle Winning and Total Cost (AAV)", x = "Win Percentage", y = "Total Cost")
ggplot() + geom_point(data = cle, aes(x = (wins / (losses + wins)), y = total_cost, colour="orange", size=3)) + geom_point(data = tys, aes(x = (wins / (losses + wins)), y = total_cost)) + labs(title = "Cle Winning and Total Cost (AAV)", x = "Win Percentage", y = "Total Cost", size="Team"))
ggplot() + geom_point(data = cle, aes(x = (wins / (losses + wins)), y = total_cost, colour="orange", size=3)) + geom_point(data = tys, aes(x = (wins / (losses + wins)), y = total_cost)) + labs(title = "Cle Winning and Total Cost (AAV)", x = "Win Percentage", y = "Total Cost", size="Team")
ggplot() + geom_point(data = cle, aes(x = (wins / (losses + wins)), y = total_cost, colour="orange", size=3)) + geom_point(data = tys, aes(x = (wins / (losses + wins)), y = total_cost)) + labs(title = "Cle Winning and Total Cost (AAV)", x = "Win Percentage", y = "Total Cost", colour="Cleveland")
ne = tys[tys$team_id == "NE",]
ne
ggplot() + geom_point(data = cle, aes(x = (wins / (losses + wins)), y = total_cost, colour = "orange", size = 6)) + geom_point(data = ne, aes(x = (wins / (losses + wins)), y = total_cost, colour = "blue", size = 4)) + geom_point(data = tys, aes(x = (wins / (losses + wins)), y = total_cost)) + labs(title = "CLE/NE Winning and Total Cost (AAV)", x = "Win Percentage", y = "Total Cost", colour="NE,CLE", size="NE,CLE")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WinningVersusSpending.R", encoding = "Windows-1252")
ggplot() + geom_point(data = cle, aes(x = wins, y = total_cost, colour = "orange", size = 6)) + geom_point(data = ne, aes(x = wins, y = total_cost, colour = "blue", size = 4)) + geom_point(data = tys, aes(x = wins, y = total_cost)) + labs(title = "CLE/NE Winning and Total Cost (AAV)", x = "Win Percentage", y = "Total Cost", colour="NE,CLE", size="NE,CLE")
sum(cle)
summarize(cle)
summary(cle)
colSums(cle)
aggregate(cle,list(team_id), sum)
aggregate(cle,list("team_id"), sum)
aggregate(cle,list(Team = cle.team_id), sum)
aggregate(cle,list(Team = cle$team_id), sum)
str(cle)
aggregate(cle,list(Team = cle$team_id), mean)
aggregate(cle,list(Team = cle$team_id), sum)
aggregate(cle,list(Team = cle$team_id), mean)
aggregate(tys,list(Team = tys$team_id), mean)
aggregate(tys,list(Team = tys$team_id), mean)
groupby(tys,team_id)
library(dplyr)
groupby(tys,team_id)
group_by(tys,team_id)
select(tys,~id)
select(tys,~1)
select(tys,~"id")
select(tys,"id")
select(tys,-"id")
select(tys,-id)
tys <- select(tys, - id) tysg <- group_by(tys, team_id) tysgmean = aggregate(tysg, list(Team = tys$team_id), mean)
tysgmean
tysgmean = aggregate(tysg, list(Team = tys$team_id), mean) tysgmean <- select(tysgmean, - id)
tysgmean <- select(tysgmean, - team_id)
tysgmean
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + labs(title = "2011-2015 Winning and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm", color = "red", linetype = 2) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm", color = "red", linetype = 2) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "glm", color = "blue", linetype = 2) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost") ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm", color = "red", linetype = 2) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "glm", colour = "blue", linetype = 2) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WinningVersusSpending.R", encoding = "Windows-1252")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "glm", colour = "blue", linetype = 2) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WinningVersusSpending.R", encoding = "Windows-1252")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + geom_point(data = cle, aes(x = wins, y = total_cost, colour = "orange", size = 6)) + geom_point(data = ne, aes(x = wins, y = total_cost, colour = "blue", size = 6)) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost")
cle = tys[tysgmean$team_id == "CLE",] ne = tys[tysgmean$team_id == "NE",]
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + geom_point(data = cle, aes(x = wins, y = total_cost, colour = "orange", size = 6)) + geom_point(data = ne, aes(x = wins, y = total_cost, colour = "blue", size = 6)) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost")
cle
cle = tys[tysgmean$team == "CLE",] ne = tys[tysgmean$team == "NE",]
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + geom_point(data = cle, aes(x = wins, y = total_cost, colour = "orange", size = 6)) + geom_point(data = ne, aes(x = wins, y = total_cost, colour = "blue", size = 6)) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost")
cle
cle = tysgmean[tysgmean$team == "CLE",] ne = tysgmean[tysgmean$team == "NE",]
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + geom_point(data = cle, aes(x = wins, y = total_cost, colour = "orange", size = 6)) + geom_point(data = ne, aes(x = wins, y = total_cost, colour = "blue", size = 6)) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost")
tysmean
tysgmean
cle = tysgmean[tysgmean$team == "CLE",] ne = tysgmean[tysgmean$team == "NE",]
cle
cle = tysgmean[tysgmean$Team == "CLE",] ne = tysgmean[tysgmean$Team == "NE",]
cle
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + geom_point(data = cle, aes(x = wins, y = total_cost, colour = "orange", size = 6)) + geom_point(data = ne, aes(x = wins, y = total_cost, colour = "blue", size = 6)) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ne
ne = tysgmean[tysgmean$Team == "NE",]
ne
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WinningVersusSpending.R", encoding = "Windows-1252")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + geom_point(data = cle, aes(x = wins, y = total_cost, colour = "orange", size = 6)) + geom_point(data = ne, aes(x = wins, y = total_cost, colour = "blue", size = 6)) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + geom_point(data = cle, aes(x = wins, y = total_cost, colour = "orange", size = 6)) + geom_point(data = ne, aes(x = wins, y = total_cost, colour = "blue", size = 6)) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost")
cle, ne
cle
ne
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + geom_point(data = ne, aes(x = wins, y = total_cost, colour = "blue", size = 6)) + geom_point(data = cle, aes(x = wins, y = total_cost, colour = "orange", size = 6)) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost")
cle = tysgmean[tysgmean$Team %in% c("CLE","NE")]
cle = tysgmean[tysgmean$Team == "CLE" | tysgmean$Team == "NE",]
cle
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WinningVersusSpending.R", encoding = "Windows-1252")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + geom_point(data = special, aes(x = wins, y = total_cost, colour = "red", size = 6)) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + geom_point(data = special, aes(x = wins, y = total_cost, colour = "red", size = 6)) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost", colour = "NE,CLE", size = "NE,CLE")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + geom_point(data = special, aes(x = wins, y = total_cost,  size = 6)) + labs(title = "2011-2015 Mean Wins Per Season and Total Cost (AAV)", x = "Wins", y = "Total Cost",  size = "NE,CLE")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + geom_point(data = special, aes(x = wins, y = total_cost,  size = 6)) + labs(title = "2011-2015 Mean Wins and Total Cost (AAV)", x = "Wins", y = "Total Cost",  size = "NE,CLE")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WinningVersusSpending.R", encoding = "Windows-1252")
ggplot(data = tys, aes(x = season_year, y = total_cost, color = wins)) + scale_colour_gradient(low = "red", high = "green") + geom_point() + geom_smooth(method = "lm", color = "green", linetype = 2) + labs(title = "Cost and Wins Per Year", x = "Year", y = "Total Cost", color = "Wins")
tysgmean
ggplot(data = tysgmean, aes(x = Team, y = total_cost, color = wins)) + scale_colour_gradient(low = "red", high = "green") + geom_bar() + labs(title = "Cost and Wins Per Year", x = "Team", y = "Total Cost", color = "Wins")
ggplot(data = tysgmean, aes( y = total_cost, color = wins)) + scale_colour_gradient(low = "red", high = "green") + geom_bar() + labs(title = "Cost and Wins Per Year", x = "Team", y = "Total Cost", color = "Wins")
ggplot(data = tysgmean, aes( x = total_cost, color = wins)) + scale_colour_gradient(low = "red", high = "green") + geom_bar(position = "stack") + labs(title = "Cost and Wins Per Year", x = "Team", y = "Total Cost", color = "Wins")
ggplot(data = tysgmean, aes( x = total_cost, fill = wins)) + #scale_colour_gradient(low = "red", high = "green") + geom_bar(position = "stack") + labs(title = "Cost and Wins Per Year", x = "Team", y = "Total Cost", color = "Wins")
ggplot(data = tysgmean, aes( y = total_cost, tfill = wins)) + #scale_colour_gradient(low = "red", high = "green") + geom_bar(position = "stack") + labs(title = "Cost and Wins Per Year", x = "Team", y = "Total Cost", color = "Wins")
ggplot(data = tysgmean, aes( x = wins, y = total_cost, fill = Team)) + #scale_colour_gradient(low = "red", high = "green") + geom_bar(position = "stack") + labs(title = "Cost and Wins Per Year", x = "Team", y = "Total Cost", color = "Wins")
ggplot(data = tysgmean, aes( x = wins, y = total_cost)) + #scale_colour_gradient(low = "red", high = "green") + geom_bar(stat=Team) + labs(title = "Cost and Wins Per Year", x = "Team", y = "Total Cost", color = "Wins")
ggplot(data = tysgmean, aes( x = wins, y = total_cost)) + #scale_colour_gradient(low = "red", high = "green") + geom_bar() + labs(title = "Cost and Wins Per Year", x = "Team", y = "Total Cost", color = "Wins")
ggplot(data = tysgmean, aes( x = wins, y = total_cost)) + #scale_colour_gradient(low = "red", high = "green") + geom_bar(stat = wins) + labs(title = "Cost and Wins Per Year", x = "Team", y = "Total Cost", color = "Wins")
ggplot(data = tysgmean, aes( x = wins, y = total_cost)) + #scale_colour_gradient(low = "red", high = "green") + geom_bar(stat = "wins") + labs(title = "Cost and Wins Per Year", x = "Team", y = "Total Cost", color = "Wins")
ggplot(data = tysgmean, aes( x = wins, y = total_cost)) + #scale_colour_gradient(low = "red", high = "green") + geom_bar()
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + #geom_point(data = special, aes(x = wins, y = total_cost,  size = 6)) + geom_text(aes(label=Team),size=3) labs(title = "2011-2015 Mean Wins and Total Cost (AAV)", x = "Wins", y = "Total Cost", size = "NE,CLE")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + #geom_point(data = special, aes(x = wins, y = total_cost,  size = 6)) + geom_text(aes(label=tysgmean$Team),size=3) labs(title = "2011-2015 Mean Wins and Total Cost (AAV)", x = "Wins", y = "Total Cost", size = "NE,CLE")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + #geom_point(data = special, aes(x = wins, y = total_cost,  size = 6)) + geom_text(aes(label=tysgmean$Team),size=3) + labs(title = "2011-2015 Mean Wins and Total Cost (AAV)", x = "Wins", y = "Total Cost", size = "NE,CLE" ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_smooth(method = "lm") + #geom_point(data = special, aes(x = wins, y = total_cost,  size = 6)) + geom_text(aes(label=tysgmean$Team),size=3) + labs(title = "2011-2015 Mean Wins and Total Cost (AAV)", x = "Wins", y = "Total Cost", size = "NE,CLE"
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + #geom_point(data = special, aes(x = wins, y = total_cost,  size = 6)) + geom_text(aes(label=tysgmean$Team),size=3) + labs(title = "2011-2015 Mean Wins and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_text(aes(label=tysgmean$Team),size=3)
ggplot() + geom_point(data = tysgmean, aes(x = wins, y = total_cost)) + geom_text(aes(label=tysgmean$Team),size=3) + labs(title = "2011-2015 Mean Wins and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot() + geom_point(data = tysgmean, aes(x = tysgmean$wins, y = tysgmean$total_cost)) + geom_text(aes(label=tysgmean$Team),size=3) + labs(title = "2011-2015 Mean Wins and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot(data = tysgmean, aes(x = tysgmean$wins, y = tysgmean$total_cost)) + geom_point() + geom_text(aes(label=tysgmean$Team),size=3) + labs(title = "2011-2015 Mean Wins and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot(data = tysgmean, aes(x = tysgmean$wins, y = tysgmean$total_cost)) + geom_point(aes(color = tysgmean$total_cost)) + geom_text(aes(label=tysgmean$Team),size=3) + labs(title = "2011-2015 Mean Wins and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot(data = tysgmean, aes(x = tysgmean$wins, y = tysgmean$total_cost)) + geom_point(aes(color = tysgmean$total_cost, size=8)) + geom_text(aes(label=tysgmean$Team),size=3) + labs(title = "2011-2015 Mean Wins and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot(data = tysgmean, aes(x = tysgmean$wins, y = tysgmean$total_cost)) + geom_point(aes(color = tysgmean$total_cost, size=8)) + geom_text(aes(label=tysgmean$Team),size=3, colour = "red") + labs(title = "2011-2015 Mean Wins and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot(data = tysgmean, aes(x = tysgmean$wins, y = tysgmean$total_cost)) + geom_point(aes(color = tysgmean$total_cost)) + geom_text(aes(label=tysgmean$Team),size=6, colour = "red") + labs(title = "2011-2015 Mean Wins and Total Cost (AAV)", x = "Wins", y = "Total Cost")
ggplot(data = tysgmean, aes(x = tysgmean$wins, y = tysgmean$total_cost)) + geom_point() + geom_text(aes(label=tysgmean$Team),size=6, colour = "red") + labs(title = "2011-2015 Mean Wins and Total Cost (AAV)", x = "Wins", y = "Total Cost")
tysgmean
tysgmean[order(wins)]
tysgmean[order(Wins)]
tysgmean[order(wins)]
tysgmean[order(tysgmena$wins)]
tysgmean
tysgmean[order(tysgmena$wins),]
tysgmean[order(wins),]
tysgmean[order(tysgmean$wins),]
x = mutate(tysgmean,fratio = offense_cost /total_cost)
x
x[order(x$wins),]
x[order(x$total_cost),]
summarize(tys)
summary(tys)
summarize(tys,sd(wins))
summarize(tysg,sd(wins))
tys_sd = summarize(tysg,sd(wins))
tys_sd
head(tsy_sd)
head(tys_sd,32)
tail(tys_sd,32)
tail(tys_sd)
tys_sd <- tys_sd[order(tys_sd$sd(wins)),]
tys_sd <- tys_sd[order(tys_sd$sd(wins))]
tys_sd <- tys_sd[order("sd(wins)"),]
tys
tys_sd
tys_sd = summarize(tysg,sd(wins))
tys_sd
tys_sd
colname(tys_sd) <- c("Team", "SD") 
colnames(tys_sd) <- c("Team", "SD") 
tys_sd <- tys_sd[order(tys_sd$SD),]
tys_sd
tail(tys_sd)
mutate(tysgmean,CPW = total_Cost/wins)
mutate(tysgmean,CPW = total_cost/wins)
tysgmean <- mutate(tysgmean,CPW = total_cost/wins)
tysgmean
tysgmean <- tysgmean[order(tysgmean$CPW),]
tysgmean
tysgmean <- mutate(tysgmean,CPW = total_cost/(wins+losses))
tysgmean <- tysgmean[order(tysgmean$CPW),]
tysgmean
ggplot(tysgmean, aes(x = total_cost, y = wins+losses, label = Team)) +     geom_point(aes(size = wins, colour = "blue")) +     geom_text(hjust = 1, size = 2) +     scale_size(range = c(1, 15)) +     theme_bw()
ggplot(tysgmean, aes(x = total_cost, y = (wins + losses)-16, label = Team)) +     geom_point(aes(size = wins, colour = "blue")) +     geom_text(hjust = 1, size = 2) +     scale_size(range = c(1, 15)) +     labs(title = "Mean Costs, Wins, Games 2011-2015", x = "Mean Cost in AAV", y = "Post Season Games")     theme_bw()
ggplot(tysgmean, aes(x = total_cost/1000000, y = (wins + losses)-16, label = Team)) +     geom_point(aes(size = wins, colour = "blue")) +     geom_text(hjust = 1, size = 2) +     scale_size(range = c(1, 15)) +     labs(title = "Mean Cost, Wins, Post Season Games 2011-2015", x = "Mean Cost (Millions) in AAV", y = "Post Season Games")     theme_bw()
ggplot(tysgmean, aes(x = total_cost/1000000, y = (wins + losses)-16, label = Team)) +     geom_point(aes(size = wins, colour = "blue")) +     geom_text(hjust = 1, size = 2) +     scale_size(range = c(1, 15)) +     labs(title = "Mean Cost, Wins, Post Season Games 2011-2015", x = "Mean Cost (Millions) in AAV", y = "Post Season Games") +     theme_bw()
ggplot(tysgmean, aes(x = total_cost/1000000, y = (wins + losses)-16, label = Team)) +     geom_point(aes(size = wins)) +     geom_text(hjust = 1, size = 2) +     scale_size(range = c(1, 15)) +     labs(title = "Mean Cost, Wins, Post Season Games 2011-2015", x = "Mean Cost (Millions) in AAV", y = "Post Season Games") +     theme_bw()
ggplot(tysgmean, aes(x = total_cost/1000000, y = (wins + losses)-16, label = Team)) +     geom_point(aes(size = wins)) +     geom_text(hjust = 1, size = 2, color="white") +     scale_size(range = c(1, 15)) +     labs(title = "Mean Cost, Wins, Post Season Games 2011-2015", x = "Mean Cost (Millions) in AAV", y = "Post Season Games") +     theme_bw()
ggplot(tysgmean, aes(x = total_cost/1000000, y = (wins + losses)-16, label = Team)) +     geom_point(aes(size = wins)) +     geom_text(hjust = 1, size = 2, color="blue") +     scale_size(range = c(1, 15)) +     labs(title = "Mean Cost, Wins, Post Season Games 2011-2015", x = "Mean Cost (Millions) in AAV", y = "Post Season Games") +     theme_bw()
ggplot(tysgmean, aes(x = total_cost/1000000, y = (wins + losses)-16, label = Team)) +     geom_point(aes(size = wins), shape=1) +     geom_text(hjust = 1, size = 2, color="blue") +     scale_size(range = c(1, 15)) +     labs(title = "Mean Cost, Wins, Post Season Games 2011-2015", x = "Mean Cost (Millions) in AAV", y = "Post Season Games") +     theme_bw()
ggplot(tysgmean, aes(x = total_cost/1000000, y = (wins + losses)-16, label = Team)) +     geom_point(aes(size = wins), shape=1) +     geom_text(hjust = 2, size = 2, color="black") +     scale_size(range = c(1, 15)) +     labs(title = "Cost, Wins, Post Season Games 2011-2015", x = "Avg Yearly Cost (AAV in Millions)", y = "Avg Post Season Games") +     theme_bw()
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/PlayerStats.R", echo = TRUE, encoding = "Windows-1252")
rtvs::debug_source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/PlayerStats.R", encoding = "Windows-1252")
?dbReadTable
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/PlayerStats.R", echo = TRUE, encoding = "Windows-1252")
?exists
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/PlayerStats.R", encoding = "Windows-1252")
sum(pp$fumbles_tot)
?attach
aggregate(pp$fumbles_tot, list(pp$gsis_id),FUN=sum)
if (!exists("pp")) {     pp <- dbReadTable(con, c("public", "play_player")) } if (!exists("games")) {     games <- dbReadTable(con, c("public", "games")) }
if (!exists("pp")) {     pp <- dbReadTable(con, c("public", "play_player")) } if (!exists("games")) {     games <- dbReadTable(con, c("public", "game")) }
games <- filter(games,games$season_type=='regular')
games <- dbReadTable(con, c("public", "game"))
games <- filter(games, games$season_type == 'Regular')
ppg <- merge(pp,games)
aggregate(ppg$fumbles_tot, list(pp$gsis_id),FUN=sum)
aggregate(ppg$fumbles_tot, list(ppg$gsis_id),FUN=sum)
aggregate(ppg$fumbles_tot, list(ppg$team),FUN=sum)
aggregate(ppg$fumbles_lost, list(ppg$team),FUN=sum)
ppg$totalTO <- ppg$fumbles_lost+ppg$passing_int
aggregate(ppg$totalTO, list(ppg$team),FUN=sum)
aggregate(ppg$totalTO, list(ppg$team,ppg$season_year),FUN=sum)
if (!exists("yearStats")) {     wstats <- dbReadTable(con, c("public", "teamyearstats")) }
  games <- dbReadTable(con, c("public", "game"))
games <- filter(games, (games$season_type == 'Regular' || games$season_type == 'Postseason'))
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/PlayerStats.R", encoding = "Windows-1252")
ystats <- merge(aggregate(ppg$totalTO, list(ppg$team, ppg$season_year), FUN = sum), wstats, by.x = ppg$team, by.y = wstats$team_id)
ystats <- merge(aggregate(ppg$totalTO, list(ppg$team, ppg$season_year), FUN = sum), wstats, by.x = team, by.y = team_id)
ystats <- merge(aggregate(ppg$totalTO, list(ppg$team, ppg$season_year), FUN = sum), wstats, by.x = "team", by.y = "team_id")
?merge
aggregate(ppg$totalTO, list(ppg$team, ppg$season_year), FUN = sum)
ystats <- aggregate(ppg$totalTO, list(ppg$team, ppg$season_year), FUN = sum)
colnames(ystats) <- c("teamId","year","TO")
ystats <- merge(ystats, wstats)
ystats
colnames(ystats) <- c("team_id","season_year","TO")
ystats <- merge(ystats, wstats)
ystats <- aggregate(ppg$totalTO, list(ppg$team, ppg$season_year), FUN = sum)
ystats <- aggregate(ppg$totalTO, list(ppg$team, ppg$season_year), FUN = sum) colnames(ystats) <- c("team_id","season_year","TO") if (!exists("yearStats")) {     wstats <- dbReadTable(con, c("public", "teamyearstats")) } ystats <- merge(ystats, wstats)
    wstats <- select(wstats, team_id, season_year, wins)
ystats <- aggregate(ppg$totalTO, list(ppg$team, ppg$season_year), FUN = sum) colnames(ystats) <- c("team_id","season_year","TO") if (!exists("yearStats")) {     wstats <- dbReadTable(con, c("public", "teamyearstats"))     wstats <- select(wstats, team_id, season_year, wins) } ystats <- merge(ystats, wstats)
ggplot(ystats, aes(wins, TO)) + geom_point(color = "firebrick")
g <- ggplot(ystats, aes(wins, TO)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
?aggregate
aggregate(season_year ~ TO, ystats, sum)
aggregate(wins ~ TO, ystats, sum)
astats <- aggregate(wins ~ TO, ystats, sum)
g <- ggplot(astats, aes(wins, TO)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
g <- ggplot(astats, aes(wins, TO)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WiiningVTurnovers.R", encoding = "Windows-1252")
# lets test the idea that winning is inversely correlates with turn overs  g <- ggplot(astats, aes(wins, TurnOvers)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WiiningVTurnovers.R", encoding = "Windows-1252")
g <- ggplot(astats, aes(wins, TurnOvers)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
ToWins <- filter(games, games$season_type == 'Regular') ToWins$TOWinTracks <- (ToWins$home_score > ToWins$away_score & ToWins$home_turnovers > ToWins$away_turnovers) | (ToWins$home_score < ToWins$away_score & ToWins$home_turnovers < ToWins$away_turnovers)
nrows(ToWins$TOWinTracks == TRUE)
nrow(ToWins$TOWinTracks == TRUE)
nrow(ToWins$TOWinTracks = TRUE)
nrow(ToWins[ToWins$TOWinTracks == TRUE])
nrow(ToWins[ToWins$TOWinTracks == TRUE],)
nrow(ToWins[ToWins$TOWinTracks == TRUE,])
nrow(ToWins[ToWins$TOWinTracks == FALSE,])
  games <- dbReadTable(con, c("public", "game"))
ToWins <- filter(games, games$season_type == 'Regular') ToWins <- mutate(TODif, ToWins$home_turnovers - ToWins$away_turnovers)
ToWins <- mutate(TODif, home_turnovers - away_turnovers)
ToWins <- mutate(ToWins, TODif, home_turnovers - away_turnovers)
ToWins %>%  mutate(TODif= home_turnovers - away_turnovers)
ToWins <-  mutate(TODif = home_turnovers - away_turnovers)
ToWins <-  mutate(ToWins, TODif = home_turnovers - away_turnovers)
(ToWins$TODif[ToWins$away_score > ToWins$home_score]*-1)
ToWins$TODif <- (ToWins$TODif[ToWins$away_score > ToWins$home_score]*-1)
ToWins$TODif <- transform(ToWins, TODif = ifelse(away_score > home_score,     TODif*-1,TODif))
ToWins <- filter(games, games$season_type == 'Regular') ToWins <-  mutate(ToWins, TODif = home_turnovers - away_turnovers) ToWins <- transform(ToWins, TODif = ifelse(away_score > home_score,     TODif*-1,TODif))
ToWins <- mutate(ToWins, TOWW = ifelse(((home_score > away_score & home_turnovers > away_turnovers) | home_score < away_score & home_turnovers < away_turnovers)), 1, 0))
ToWins <- mutate(ToWins, TOWW = ifelse(((home_score > away_score & home_turnovers > away_turnovers) | home_score < away_score & home_turnovers < away_turnovers)), 1, 0))
ToWins <- mutate(ToWins, TOWW = ifelse((home_score > away_score & home_turnovers > away_turnovers) | (home_score < away_score & home_turnovers < away_turnovers), 1, 0))
g <- ggplot(ToWins, aes(TOWW, TODif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
unique(games$season_year)
AToWins <- aggregate(ToWins,TODif ~ TOWW,sum())
AToWins <- aggregate(ToWins,TODif ~ TOWW,sum)
AToWins <- aggregate(, TODif ~ TOWW, ToWin,sum)
AToWins <- aggregate(TODif ~ TOWW, ToWin,sum)
AToWins <- aggregate(TODif ~ TOWW, ToWins, sum)
ToWins <- filter(games, games$season_type == 'Regular') ToWins <- mutate(ToWins, TODif = home_turnovers - away_turnovers) ToWins <- mutate(ToWins, PointDif = home_turnovers - away_turnovers) ToWins <- transform(ToWins, TODif = ifelse(away_score > home_score,     TODif * -1, TODif), TODif = ifelse(away_score > home_score,     PointDif * -1, PointDif))
ToWins <- filter(games, games$season_type == 'Regular') ToWins <- mutate(ToWins, TODif = home_turnovers - away_turnovers) ToWins <- mutate(ToWins, PointDif = home_turnovers - away_turnovers) ToWins <- transform(ToWins, TODif = ifelse(away_score > home_score,     TODif * -1, TODif), PointDif = ifelse(away_score > home_score,     PointDif * -1, PointDif))
g <- ggplot(ToWins, aes(PointDif, TODif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
ToWins <- filter(games, games$season_type == 'Regular') ToWins <- mutate(ToWins, TODif = home_turnovers - away_turnovers) ToWins <- mutate(ToWins, PointDif = home_score - away_score) ToWins <- transform(ToWins, TODif = ifelse(away_score > home_score,     TODif * -1, TODif), PointDif = ifelse(away_score > home_score,     PointDif * -1, PointDif))
# lets test the idea that winning is inversely correlates with turn overs  g <- ggplot(ToWins, aes(PointDif, TODif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
ToWins$home_turnovers - ToWins$away_turnovers
max(ToWins$home_turnovers - ToWins$away_turnovers)
max(ToWins$home_score - ToWins$away_score)
min(ToWins$home_score - ToWins$away_score)
min(ToWins$home_turnovers - ToWins$away_turnovers)
    pp <- dbReadTable(con, c("public", "play_player"))
pp <- select(pp, gsis_id, fumbles_lost, passing_int)
    pp <- mutate(pp, totto = fumbles_lost + passing_int)
max(pp$totto)
max(pp$totto)    pp <- aggregate(gsis_id ~ totto, pp, sum)
pp <- aggregate(gsis_id ~ totto, pp, sum)
 pp <- aggregate(totto ~ gsis_id, pp, sum)
 pp <- dbReadTable(con, c("public", "play_player"))     pp <- filter(pp, season_type == "Regular")     pp <- select(pp, gsis_id, team,  fumbles_lost, passing_int)     pp <- mutate(pp, totto = fumbles_lost + passing_int)     pp <- aggregate(totto ~ gsis_id, pp, sum)
summarise(pp)
summarise(    pp <- dbReadTable(con, c("public", "play_player"))     pp <- select(pp, gsis_id, team,  fumbles_lost, passing_int)     pp <- mutate(pp, totto = fumbles_lost + passing_int))
pp <- dbReadTable(con, c("public", "play_player"))     pp <- select(pp, gsis_id, team,  fumbles_lost, passing_int)     pp <- mutate(pp, totto = fumbles_lost + passing_int)
str(pp)
# Make connection to postgresql drv <- dbDriver("PostgreSQL") con <- dbConnect(drv, dbname = "nfldb", port = "5432", host = "localhost", user = "postgres", password = "Canon7D") # Update the teamyearstats with cost information if (!exists("pp")) {     pp <- dbReadTable(con, c("public", "play_player"))     pp <- select(pp, gsis_id, team,  fumbles_lost, passing_int)     pp <- mutate(pp, totto = fumbles_lost + passing_int)    # pp <- aggregate(totto ~ gsis_id, pp, sum) } # Update the teamyearstats with cost information if (!exists("games")) {     games <- dbReadTable(con, c("public", "game"))     games <- filter(games, games$season_type == 'Regular')     games <- select(games, gsis_id, home_team, home_score, home_turnovers,                     away_team, away_score, away_turnovers) }
 pp <- aggregate(totto ~ gsis_id + team, pp, sum)
ToWins <- merge(games, pp)
summary(ToWins)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
library(reshape2)
ToWinsHome <- filter(ToWins, team == home_team)
ToWinsAway <- filter(ToWins, team == away_team)
names(ToWinsHome)[names(ToWinsHome) == 'totto'] <- 'home_turnovers'
ToWinsHome$away_turnovers <- ToWinsAway$totto
ToWins <- merge(games, pp) ToWins2 <- filter(ToWins, team == home_team) ToWinsAway <- filter(ToWins, team == away_team) names(ToWins2)[names(ToWins2) == 'totto'] <- 'home_turnovers' ToWins2$away_turnovers <- ToWinsAway$totto
summarise(ToWins2)
summary(ToWins2)
ToWins2 <- mutate(ToWins, TODif = home_turnovers - away_turnovers) ToWins2 <- mutate(ToWins, PointDif = home_score - away_score) ToWins2 <- transform(ToWins, TODif = ifelse(away_score > home_score,     TODif * -1, TODif), PointDif = ifelse(away_score > home_score,     PointDif * -1, PointDif)) AToWins <- aggregate(TODif ~ TOWW, ToWins, sum)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
ToWins <- merge(games, pp) ToWins2 <- filter(ToWins, team == home_team) ToWinsAway <- filter(ToWins, team == away_team) names(ToWins2)[names(ToWins2) == 'totto'] <- 'home_turnovers' ToWins2$away_turnovers <- ToWinsAway$totto ToWins2 <- mutate(ToWins2, TODif = home_turnovers - away_turnovers) ToWins2 <- mutate(ToWins2, PointDif = home_score - away_score) ToWins2 <- transform(ToWins2, TODif = ifelse(away_score > home_score,     TODif * -1, TODif), PointDif = ifelse(away_score > home_score,     PointDif * -1, PointDif)) AToWins <- aggregate(TODif ~ TOWW, ToWins, sum)
AToWins <- aggregate(TODif ~ TOWW, ToWins2, sum)
AToWins <- aggregate(TODif ~ PointDif, ToWins2, sum)
g <- ggplot(ToWins2, aes(PointDif, TODif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
min(ToWin2$TODIF)
min(ToWin2$TODIF)
min(ToWin2$TODiF)
min(ToWin2$TODif)
min(ToWin2$TODif)
min(ToWins2$TODif)
max(ToWins2$TODif)
g <- ggplot(ToWins2, aes(TODif, PointDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
g <- ggplot(ToWins2, aes(TODif, PointDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
min(ToWins2$PointDif)
ToWins2 <- transform(ToWins2, WinToBattle = ifelse(     (away_score > home_score & away_turnovers < home_turnovers)     |(away_score < home_score & away_turnovers > home_turnovers), 'Y', 'N'))
AToWins <- aggregate(WinToBattle ~ ToDif, data = ToWins2, sum)
AToWins <- aggregate(WinToBattle ~ TODif, data = ToWins2, sum)
AToWins <- aggregate(TODif ~ WinToBattle, data = ToWins2, sum)
g <- ggplot(AToWins, aes(TODif, WinToBattle)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
g <- ggplot(AToWins, aes(TODif, WinToBattle)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
g <- ggplot(ToWins2, aes(TODif, WinToBattle)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
g <- ggplot(ToWins2, aes(TODif, PointDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
?ifelse
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
g <- ggplot(ToWins2, aes(TODif, PointDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
summary(ToWins2)
ToWins2 <- mutate(ToWins2, PointDif = ifelse(home_turnovers > away_turnovers,                                           home_score - away_score,                                           away_score - home_score))
g <- ggplot(ToWins2, aes(TODif, PointDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
ToWins2 <- mutate(ToWins2, PointDif = ifelse(home_turnovers < away_turnovers,                                           home_score - away_score,                                           away_score - home_score))
g <- ggplot(ToWins2, aes(TODif, PointDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
ToWins2 <- mutate(ToWins2, TODif = ifelse(away_score >= home_score,                                         away_turnovers - home_turnovers,                                         home_turnovers - away_turnovers)) ToWins2 <- mutate(ToWins2, PointDif = ifelse(home_turnovers < away_turnovers,                                           home_score - away_score,                                           away_score - home_score))
g <- ggplot(ToWins2, aes(TODif, PointDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
nrow(ToWins2)
nrow(ToWins2)/2
5*16*16
g <- ggplot(ToWins2, aes(TODif, PointDif)) + geom_density(color = "firebrick")
ggplot(ToWins2, aes(TODif, PointDif)) + geom_density(color = "firebrick")
ggplot(ToWins2, aes(TODif)) + geom_density(color = "firebrick")
ggplot(ToWins2, aes(TODif, POintDif)) + geom_density(color = "firebrick")
 ggplot(ToWins2, aes(TODif, PointDif)) + geom_density(color = "firebrick")
ggplot(ToWins2, aes(PointDif, colour =ToDif)) + geom_density()
 ggplot(ToWins2, aes(PointDif, colour =TODif)) + geom_density()
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
g <- ggplot(ToW, aes(TODif, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", echo = TRUE, encoding = "Windows-1252")
rtvs::debug_source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
ToW <- mutate(TW, Team = home_team, TODif = home_turnovers, PDif = PointDifHome)
ToWTemp <- mutate(TW, Team = home_team, TODif = home_turnovers, PDif = PointDifHome)
ToW <- transmute(TW, Team = home_team, TODif = home_turnovers, PDif = PointDifHome) ToWTemp <- transmute(TW, Team = home_team, TODif = home_turnovers, PDif = PointDifHome)
ToW <- rbind(ToW, ToWTemp)
g <- ggplot(ToW, aes(TODif, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
ToW <- transmute(TW, Team = home_team, TODif = home_turnovers, PDif = PointDifHome) ToWTemp <- transmute(TW, Team = away_team, TODif = away_turnovers, PDif = PointDifAway) ToW <- rbind(ToW, ToWTemp)
g <- ggplot(ToW, aes(TODif, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
g <- ggplot(ToWTemp, aes(TODif, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
summary(TW)
ToW <- transmute(TW, Team = home_team, TODif = TODifHome, PDif = PointDifHome) ToWTemp <- transmute(TW, Team = away_team, TODif = TODifAway, PDif = PointDifAway) ToW <- rbind(ToW, ToWTemp)
g <- ggplot(ToW, aes(TODif, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", echo = TRUE, encoding = "Windows-1252")
aggregate(Team ~ TODif, data = ToW)
aggregate(Team ~ TODif, data = ToW, sum)
aggregate(TODif ~ Team, data = ToW, sum)
x = aggregate(TODif ~ Team, data = ToW, sum)
x=x[order_by(X11$TODif),]
x=x[order(X11$TODif),]
arrange(x,"TODif")
arrange(x,TODif)
arrange(x,desc(TODif))
aggregate(Team ~ TODif, PDif, data=ToW)
aggregate(Team ~ TODif, PDif, data=ToW)
ToWA <- aggregate(Team ~ TODif + PDif, data=ToW)
ToWA <- aggregate(Team ~ TODif + PDif, data=ToW, sum)
ToWA <- aggregate(Team ~ TODif + PDif, data=ToW, FUN=sum)
ToWA <- aggregate(Team ~ ., data=ToW, FUN=sum)
ToWA <- aggregate(Team ~ TODif, data=ToW, FUN=sum)
aggregate(Team ~ TODif, data=ToW, FUN=sum)
 aggregate(TODif ~ Team, data=ToW, FUN=sum)
aggregate(cbin(TODif,PDif) ~ Team, data=ToW, FUN=sum)
aggregate(cbind(TODif,PDif) ~ Team, data=ToW, FUN=sum)
ToWA <- arrange(ToWA,desc(TODif))
ToWA <- aggregate(cbind(TODif, PDif) ~ Team, data = ToW, FUN = sum) ToWA <- arrange(ToWA,desc(TODif))
ToWA
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
ToWA <- aggregate(cbind(TODif, PDif) ~ Team, data = ToW, FUN = sum) ToWA <- arrange(ToWA,desc(TODif))
ToWA
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/BigPlay.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/BigPlay.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/BigPlay.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/BigPlay.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/BigPlay.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/BigPlay.R", encoding = "Windows-1252")
aBig <- agrregate(pyds ~ team, big)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/BigPlay.R", encoding = "Windows-1252")
aBig <- aggregate(pyds ~ team, big, sum)
aBig <- arrange(aBig,pyds)
aBig
aBig <- arrange(aBig,desc(pyds))
aBig
g <- ggplot(big, aes(nrow(big), pyds)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
g <- ggplot(abig, aes(team, pyds)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
g <- ggplot(aBig, aes(team, pyds)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
g <- ggplot(big, aes(team, pyds)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
g <- ggplot(aBig, aes(pyds,team)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
g <- ggplot(aBig, aes(pyds,team), stat="identity") + geom_bar(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
g <- ggplot(aBig, aes(team, pyds), stat = "identity") + geom_bar(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
g <- ggplot(aBig, aes(pyds), stat = "identity") + geom_bar(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
g <- ggplot(aBig, aes(team),) + geom_bar(stat = "identity") g + stat_smooth(method = "lm", se = FALSE)
g <- ggplot(aBig, aes(team, pyds)) + geom_bar(stat = "identity") g + stat_smooth(method = "lm", se = FALSE)
g <- ggplot(aBig, aes(team, pyds)) + geom_bar(stat = "identity") g + coord_flip()
?reorder
g <- ggplot(aBig, aes(reorder(team,pyds), pyds)) + geom_bar(stat = "identity") g + coord_flip()
g <- ggplot(aBig, aes(Yards =reorder(team,pyds), pyds)) + geom_bar(stat = "identity") g + coord_flip()
g <- ggplot(aBig, aes(reorder(team,pyds), pyds)) + geom_bar(stat = "identity") g + coord_flip() + ylab("Team") + xlab("Total Yards") + opt(title="Big Plays >=25Yds / 2009-2015")
g <- ggplot(aBig, aes(reorder(team,pyds), pyds)) + geom_bar(stat = "identity") g + coord_flip() + ylab("Team") + xlab("Total Yards") + opts(title="Big Plays >=25Yds / 2009-2015")
g <- ggplot(aBig, aes(reorder(team,pyds), pyds)) + geom_bar(stat = "identity") g + coord_flip() + ylab("Team") + xlab("Total Yards") + ggtitle("Big Plays >=25Yds / 2009-2015")
g <- ggplot(aBig, aes(reorder(team,pyds), pyds)) + geom_bar(stat = "identity") g + coord_flip() + ylab("Total Yards") + xlab("Team") + ggtitle("Big Plays >=25Yds / 2009-2015")
    tys <- dbReadTable(con, c("public", "teamyearstats"))
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/BigPlay.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/BigPlay.R", encoding = "Windows-1252")
 games <- dbReadTable(con, c("public", "game"))     games <- filter(games, games$season_type == 'Regular' & games$season_year > 2012)     games <- select(games, gsis_id, season_year, home_team, home_score,              away_team, away_score)
bigG <- merge(big, games)
BPGW <- merge(big, games)  # [B]ig [P]lay [G]ames [W]ins  BPGWHome <- filter(BPGW, team == home_team) BPGWAway <- filter(BPGW, team == away_team) names(BPGWAway)[names(BPGWHome) == 'ppyds'] <- 'home_ppyds' BPGWHome$away_ppyds <- BPGWAway$ppyds BPGW <- merge(BPGWHome, BPGWAway)
BPGW <- merge(big, games)  # [B]ig [P]lay [G]ames [W]ins  BPGWHome <- filter(BPGW, team == home_team) BPGWAway <- filter(BPGW, team == away_team)
BPGW <- merge(big, games)  # [B]ig [P]lay [G]ames [W]ins  BPGWHome <- filter(BPGW, team == home_team) BPGWHome <- mutate(BPGWhome, PDif = home_score - away_score) BPGWHome <- select(BPGWHome, gsis_id, season_year, PDif, pyds) BPGWAway <- filter(BPGW, team == away_team) BPGWAway <- mutate(BPGWAway, PDif = away_score - home_score) BPGWAway <- select(BPGWAway, gsis_id, season_year, PDif, pyds) BPGW <- rbind(BPGWHome, BPGWAway)
BPGW <- merge(big, games)  # [B]ig [P]lay [G]ames [W]ins  BPGWHome <- filter(BPGW, team == home_team) BPGWHome <- mutate(BPGWHome, PDif = home_score - away_score) BPGWHome <- select(BPGWHome, gsis_id, season_year, PDif, pyds) BPGWAway <- filter(BPGW, team == away_team) BPGWAway <- mutate(BPGWAway, PDif = away_score - home_score) BPGWAway <- select(BPGWAway, gsis_id, season_year, PDif, pyds) BPGW <- rbind(BPGWHome, BPGWAway)
g <- ggplot(BPGW, aes(pyds, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
# Analyze winning versus turnovers from 2011 - 2015 library(stats) library(plyr) library(dplyr) library(reshape2) library(RPostgreSQL) library(DBI) library(ggplot2) # Make connection to postgresql drv <- dbDriver("PostgreSQL") con <- dbConnect(drv, dbname = "nfldb", port = "5432", host = "localhost", user = "postgres", password = "Canon7D") # Update the teamyearstats with cost information if (!exists("pp")) {     pp <- dbReadTable(con, c("public", "play_player"))     pp <- select(pp, gsis_id, team, fumbles_lost, passing_int)     pp <- mutate(pp, totto = fumbles_lost + passing_int)     pp <- aggregate(totto ~ gsis_id + team, pp, sum) } # Update the teamyearstats with cost information if (!exists("games")) {     games <- dbReadTable(con, c("public", "game"))     games <- filter(games, games$season_type == 'Regular' & games$season_year >2012)     games <- select(games, gsis_id, home_team, home_score,                     away_team, away_score) }
TW <- merge(games, pp)   # [T]urnover [Wins] TWHome <- filter(TW, team == home_team) TWAway <- filter(TW, team == away_team) names(TWHome)[names(TWHome) == 'totto'] <- 'home_turnovers' names(TWAway)[names(TWAway) == 'totto'] <- 'away_turnovers'
TW <- merge(games, pp)   # [T]urnover [Wins] TWHome <- filter(TW, team == home_team) names(TWHome)[names(TWHome) == 'totto'] <- 'home_turnovers' TWhome <- select(gsis_id, home_team, home_turnovers) TWAway <- filter(TW, team == away_team) names(TWAway)[names(TWAway) == 'totto'] <- 'away_turnovers' TWAway <- select(gsis_id, away_team, away_turnovers) TW <- merge(TWHome, TWAway)
TW <- merge(games, pp)   # [T]urnover [Wins] TWHome <- filter(TW, team == home_team) names(TWHome)[names(TWHome) == 'totto'] <- 'home_turnovers' TWhome <- select(TWHome, gsis_id, home_team, home_turnovers) TWAway <- filter(TW, team == away_team) names(TWAway)[names(TWAway) == 'totto'] <- 'away_turnovers' TWAway <- select(TwAway, gsis_id, away_team, away_turnovers) TW <- merge(TWHome, TWAway)
TW <- merge(games, pp)   # [T]urnover [Wins] TWHome <- filter(TW, team == home_team) names(TWHome)[names(TWHome) == 'totto'] <- 'home_turnovers' TWhome <- select(TWHome, gsis_id, home_team, home_turnovers) TWAway <- filter(TW, team == away_team) names(TWAway)[names(TWAway) == 'totto'] <- 'away_turnovers' TWAway <- select(TWAway, gsis_id, away_team, away_turnovers) TW <- merge(TWHome, TWAway)
TW <- merge(TWHome, TWAway)
TW <- merge(games, pp)   # [T]urnover [Wins] TWHome <- filter(TW, team == home_team) names(TWHome)[names(TWHome) == 'totto'] <- 'home_turnovers' TWHome <- select(TWHome, gsis_id, home_team, home_turnovers) TWAway <- filter(TW, team == away_team) names(TWAway)[names(TWAway) == 'totto'] <- 'away_turnovers' TWAway <- select(TWAway, gsis_id, away_team, away_turnovers) TW <- merge(TWHome, TWAway)
TW <- mutate(TW, TODifAway =   home_turnovers - away_turnovers,                           TODifHome =   away_turnovers - home_turnovers) TW <- mutate(TW, PointDifHome = home_score - away_score,                          PointDifAway = away_score - home_score)
TW <- merge(games, pp)   # [T]urnover [Wins] TWHome <- filter(TW, team == home_team) names(TWHome)[names(TWHome) == 'totto'] <- 'home_turnovers' TWHome <- select(TWHome, gsis_id, home_team, home_score, home_turnovers) TWAway <- filter(TW, team == away_team) names(TWAway)[names(TWAway) == 'totto'] <- 'away_turnovers' TWAway <- select(TWAway, gsis_id, away_team, away_score, away_turnovers) TW <- merge(TWHome, TWAway) # Now add in columns for score and turnover difference # reverse to create a positive values for good. TW <- mutate(TW, TODifAway =   home_turnovers - away_turnovers,                           TODifHome =   away_turnovers - home_turnovers) TW <- mutate(TW, PointDifHome = home_score - away_score,                          PointDifAway = away_score - home_score)
# Now reshape the data frame so the function [Turn[o]ver[W]ins ToW <- transmute(TW, Team = home_team, TODif = TODifHome, PDif = PointDifHome) ToWTemp <- transmute(TW, Team = away_team, TODif = TODifAway, PDif = PointDifAway) ToW <- rbind(ToW, ToWTemp)
g <- ggplot(ToW, aes(TODif, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
ToWA <- aggregate(cbind(TODif, PDif) ~ Team, data = ToW, FUN = sum) ToWA <- arrange(ToWA,desc(TODif))
summary(ToMA)
summary(ToWA)
# lets test the idea that winning is inversely correlates with turn overs  g <- ggplot(ToWA, aes(TODif, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
cor(ToWA$TODif, ToWA$TODif)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/BigPlay.R", encoding = "Windows-1252")
cor(BPGW$pyds, BPGW$PDif)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
cor(ToWA$TODif, ToWA$PDif)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
dbDisconnect(con)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
dbDisconnect(con)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
cor(ToWA$TODif, ToWA$PDif)
g <- ggplot(ToWA, aes(TODif, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/BigPlay.R", encoding = "Windows-1252")
g <- ggplot(BPGW, aes(pyds, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
cor(BPGW$pyds, BPGW$PDif)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/BigPlay.R", encoding = "Windows-1252")
g <- ggplot(BPGW, aes(pyds, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
cor(BPGW$pyds, BPGW$PDif)
lm(formula = BPGW$pyds ~ BPGW$PDif )
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
lm(formula = ToWA$TODif ~ToWA$PDif)
g <- ggplot(ToWA, aes(TODif, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
ToWA <- aggregate(cbind(TODif, PDif) ~ season_year, data = ToW, FUN = sum) ToWA <- arrange(ToWA,desc(TODif))
ToW <- transmute(TW, Team = home_team, season_year, TODif = TODifHome, PDif = PointDifHome) ToWTemp <- transmute(TW, Team = away_team, season_year, TODif = TODifAway, PDif = PointDifAway) ToW <- rbind(ToW, ToWTemp)
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WAndTO.R", encoding = "Windows-1252")
g <- ggplot(ToW, aes(TODif, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
ToW <- filter(Tow, TODif >= 0)
ToW <- filter(ToW, TODif >= 0)
g <- ggplot(ToW, aes(TODif, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE)
g <- ggplot(ToW, aes(TODif, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE) + ggtitle("Turnover Versus Point Differentials Per Game")
ToW <- filter(ToW, TODif >= 0 & PDif >= 0)
g <- ggplot(ToW, aes(TODif, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE) + ggtitle("Turnover Versus Point Differentials Per Game")
ToW <- filter(ToW, TODif >= 0 )
g <- ggplot(ToW, aes(TODif, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE) + ggtitle("Turnover Versus Point Differentials Per Game")
ToW <- filter(ToW, TODif >= 0 )
ToW <- transmute(TW, Team = home_team, TODif = TODifHome, PDif = PointDifHome) ToWTemp <- transmute(TW, Team = away_team, TODif = TODifAway, PDif = PointDifAway) ToW <- rbind(ToW, ToWTemp) ToW <- filter(ToW, TODif >= 0 )
g <- ggplot(ToW, aes(TODif, PDif)) + geom_point(color = "firebrick") g + stat_smooth(method = "lm", se = FALSE) + ggtitle("Turnover Versus Point Differentials Per Game")
nrow(ToW)
nrow(ToW)/256
source("~/Visual Studio 2015/Projects/DAHConsulting/NLFDashboard/NFLDashboard/NFLRANalysis/WinningVersusSpending.R", encoding = "Windows-1252")
ggplot(tysgmean, aes(x = total_cost/1000000, y = (wins + losses)-16, label = Team)) +     geom_point(aes(size = wins), shape=1) +     geom_text(hjust = 2, size = 2, color="black") +     scale_size(range = c(1, 15)) +     labs(title = "Cost, Wins, Post Season Games 2011-2015", x = "Avg Yearly Cost (AAV in Millions)", y = "Avg Post Season Games") +     theme_bw()
